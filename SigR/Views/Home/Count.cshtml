@{
    ViewData["Title"] = "Home Page";
}
<style>
    .fa-stack[data-count]:after {
        position: absolute;
        right: 0%;
        top: 1%;
        content: attr(data-count);
        font-size: 30%;
        padding: .6em;
        border-radius: 999px;
        line-height: .75em;
        color: white;
        background: rgba(255,0,0,.85);
        text-align: center;
        min-width: 2em;
        font-weight: bold;
    }
</style>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js">
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js">
</script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js">
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.0/js/all.min.js">
</script>
<style>
    h1 {
        color: green;
    }

    .badge {
        position: relative;
        top: -20px;
        left: -25px;
        border: 1px solid black;
        border-radius: 50%;
    }

    button {
        margin: 5px;
    }
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<div class="container">
    <div class="row">   
        <span id="group">
            <button type="button" class="btn btn-info">
                <i class="fa fa-envelope"></i>
            </button>
            <span class="badge badge-light">0</span>
        </span>
    </div>
    <hr />

    <div class="row">
        <div class="col-6">
            <label>Count</label>
        </div>
        <div class="col-6">
            <label>Minute</label>
        </div>
        <div class="col-6">
            <span id="productCount">0</span>
        </div>
        <div class="col-6">
            <span id="timer"></span>
        </div>

    </div>
    <div class="row">
        <div class="col-6">
            &nbsp;
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <label>Products</label>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <ul id="messagesList"></ul>
        </div>
    </div>
</div>


@section Scripts
    {
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder().withUrl("/productHub").build();
        document.getElementById("timer").innerHTML = 0;

        connection.on("ReceiveProduct", function (productName, count) {
            var minute = parseInt(document.getElementById("timer").innerHTML);
            if (minute == 0) {
                document.getElementById("timer").innerHTML = 1;
                countTimeStart();
            }
            var val = parseInt($('#group').find('.badge').text());

            // Check for the button clicked
            
            $('#group').find('.badge').text(count);

            //var abcd = document.getElementById("messagesListNum");
            var li = document.createElement("li");
            document.getElementById("messagesList").appendChild(li);
            // We can assign user-supplied strings to an element's textContent because it
            // is not interpreted as markup. If you're assigning in any other way, you
            // should be aware of possible script injection concerns.
            li.textContent = `${productName}`;
            document.getElementById("productCount").innerHTML = count;
        });
        connection.on("ReceiveResetProduct", function () {
            var val = parseInt($('#group').find('.badge').text());

            // Check for the button clicked

            $('#group').find('.badge').text(0);
            document.getElementById("timer").innerHTML = 0;
            countTimeStop();
            document.getElementById("messagesList").innerHTML = "";
            document.getElementById("productCount").innerHTML = 0;
        });
        connection.start().then(function () {
            //document.getElementById("sendButton").disabled = false;
        }).catch(function (err) {
            return console.error(err.toString());
        });

        var x;
        function countTimeStart() {
            x = setInterval(function () {
                document.getElementById("timer").innerHTML = parseInt(document.getElementById("timer").innerHTML) + 1;
            }, 60000);
        }
        function countTimeStop() {
            if (x != undefined) {
                clearInterval(x);
            }
        }

    </script>
}
